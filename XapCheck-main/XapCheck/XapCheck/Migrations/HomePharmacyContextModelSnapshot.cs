// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using XapCheck.Data;

namespace XapCheck.Migrations
{
    [DbContext(typeof(HomePharmacyContext))]
    partial class HomePharmacyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("XapCheck.Models.ActionLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ActionType");

                    b.Property<string>("Details");

                    b.Property<int?>("MedicineId");

                    b.Property<string>("PerformedBy");

                    b.Property<int?>("QuantityDelta");

                    b.Property<DateTime>("Timestamp");

                    b.Property<int?>("UserProfileId");

                    b.HasKey("Id");

                    b.HasIndex("MedicineId");

                    b.HasIndex("UserProfileId");

                    b.ToTable("ActionLogs");
                });

            modelBuilder.Entity("XapCheck.Models.AppSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt");

                    b.Property<int>("DefaultMinThreshold");

                    b.Property<bool>("EnablePopupNotifications");

                    b.Property<int>("ExpiringSoonDays");

                    b.Property<string>("Theme");

                    b.Property<DateTime?>("UpdatedAt");

                    b.Property<int?>("UserProfileId");

                    b.HasKey("Id");

                    b.HasIndex("UserProfileId");

                    b.ToTable("AppSettings");
                });

            modelBuilder.Entity("XapCheck.Models.Medicine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Dosage");

                    b.Property<DateTime>("ExpiryDate");

                    b.Property<string>("Frequency");

                    b.Property<int>("MinThreshold");

                    b.Property<string>("Name");

                    b.Property<string>("Notes");

                    b.Property<DateTime>("PurchaseDate");

                    b.Property<int>("Quantity");

                    b.Property<DateTime?>("TreatmentEnd");

                    b.Property<DateTime?>("TreatmentStart");

                    b.Property<int>("UserProfileId");

                    b.HasKey("Id");

                    b.HasIndex("UserProfileId");

                    b.ToTable("Medicines");
                });

            modelBuilder.Entity("XapCheck.Models.PurchaseListItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt");

                    b.Property<bool>("IsResolved");

                    b.Property<int>("MedicineId");

                    b.Property<string>("Reason");

                    b.Property<int>("RecommendedQuantity");

                    b.Property<int?>("UserProfileId");

                    b.HasKey("Id");

                    b.HasIndex("MedicineId");

                    b.HasIndex("UserProfileId");

                    b.ToTable("PurchaseList");
                });

            modelBuilder.Entity("XapCheck.Models.UserProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("UserProfiles");
                });

            modelBuilder.Entity("XapCheck.Models.ActionLog", b =>
                {
                    b.HasOne("XapCheck.Models.Medicine", "Medicine")
                        .WithMany()
                        .HasForeignKey("MedicineId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("XapCheck.Models.UserProfile", "UserProfile")
                        .WithMany()
                        .HasForeignKey("UserProfileId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("XapCheck.Models.AppSetting", b =>
                {
                    b.HasOne("XapCheck.Models.UserProfile", "UserProfile")
                        .WithMany()
                        .HasForeignKey("UserProfileId");
                });

            modelBuilder.Entity("XapCheck.Models.Medicine", b =>
                {
                    b.HasOne("XapCheck.Models.UserProfile", "UserProfile")
                        .WithMany("Medicines")
                        .HasForeignKey("UserProfileId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("XapCheck.Models.PurchaseListItem", b =>
                {
                    b.HasOne("XapCheck.Models.Medicine", "Medicine")
                        .WithMany()
                        .HasForeignKey("MedicineId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("XapCheck.Models.UserProfile", "UserProfile")
                        .WithMany()
                        .HasForeignKey("UserProfileId");
                });
#pragma warning restore 612, 618
        }
    }
}
